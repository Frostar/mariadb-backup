#!/bin/sh
set -e
IFS=:

TODAY=$(date "+%Y%m%d")
BACKUP_DEST_FOLDER=${BACKUP_DEST_FOLDER:-/var/tmp/}
BACKUP_DELETE_LOCAL_COPY=${BACKUP_DELETE_LOCAL_COPY:-true}
BACKUP_S3_HOST=${BACKUP_S3_HOST:-s3.amazonaws.com}
BACKUP_S3_HOST_BUCKET=${BACKUP_S3_HOST_BUCKET:-%(bucket)s.s3.amazonaws.com}

if ${BACKUP_NO_SSL}; then
    SSL_OPTION="--no-ssl"
fi

put_file_to_s3(){
    s3cmd \
        --host="${BACKUP_S3_HOST}" \
        --host-bucket="${BACKUP_S3_HOST_BUCKET}" \
        "${SSL_OPTION}" \
        --access_key="${BACKUP_S3_KEY:?'BACKUP_AWS_KEY is required'}" \
        --secret_key="${BACKUP_S3_SECRET:?'BACKUP_AWS_SECRET is required'}" \
        put "$1" \
        "${BACKUP_S3_PATH}"

    if [ -n "${BACKUP_DELETE_LOCAL_COPY}" ]; then
      rm "$1"
    fi
}

mysql_backup_single() {
    local backup_name="${BACKUP_DEST_FOLDER}${TODAY}_$1_mysqldump.sql.gz"
    /usr/bin/mysqldump --opt -h "${MYSQL_HOST}" -u "${MYSQL_USER}" -p"${MYSQL_PASSWORD}" "$1" | gzip > "${backup_name}"
    put_file_to_s3 "${backup_name}"
}

mysql_backup_all() {
    local backup_name="${BACKUP_DEST_FOLDER}${TODAY}_all_mysqldump.sql.gz"
    /usr/bin/mysqldump --opt -h "${MYSQL_HOST}" -u "${MYSQL_USER}" -p"${MYSQL_PASSWORD}" --all-databases | gzip > "${backup_name}"
    put_file_to_s3 "${backup_name}"
}

if [ -n "${MYSQL_HOST}" ]; then
    if [ -n "${DB_NAME}" ]; then
        mysql_backup_single "${DB_NAME}"
    else
        mysql_backup_all
    fi
fi
